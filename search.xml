<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Streaming Media Server on Raspberry Pi]]></title>
      <url>/2017/12/09/steaming%20media%20on%20raspberrypi/</url>
      <content type="html"><![CDATA[<h1 id="Streaming-Media-Server-on-Raspberry-Pi"><a href="#Streaming-Media-Server-on-Raspberry-Pi" class="headerlink" title="Streaming Media Server on Raspberry Pi"></a>Streaming Media Server on Raspberry Pi</h1><h2 id="Mount-Disk"><a href="#Mount-Disk" class="headerlink" title="Mount Disk"></a>Mount Disk</h2><p>增加对 NTFS 格式的支持：</p>
<pre><code>pacman -S ntfs-3g
</code></pre><p>创建挂载目录并挂载移动硬盘：</p>
<pre><code>mkdir /mnt/external_disk
mount /dev/sda1 /mnt/external_disk/
</code></pre><p>将移动硬盘设置为开机自动挂载：</p>
<pre><code>echo -ne &#39;/dev/sda1\t/mnt/external_disk/\tntfs-3g\tdefaults,noexec,umask=0000\t0\t0&#39; &gt;&gt; /etc/fstab
</code></pre><h2 id="Minidlna"><a href="#Minidlna" class="headerlink" title="Minidlna"></a>Minidlna</h2><p>安装配置 minidlna，提供流媒体服务。</p>
<pre><code>pacman -S minidlna
</code></pre><p>or</p>
<pre><code>yaourt -S readymedia-transcode-git
</code></pre><p>minidlna 默认没有提供对 rm/rmvb 类型视频文件的支持，可以通过安装 AUR 源中的 <code>readymedia-transcode-git</code> 包解决此问题。</p>
<p>手工编译安装步骤如下：</p>
<pre><code>wget https://aur.archlinux.org/cgit/aur.git/snapshot/readymedia-transcode-git.tar.gz
tar zxvf readymedia-transcode-git.tar.gz
makepkg -Acs

# 解决 fatal error: wand/MagickWand.h: No such file or directory 问题
pacman -S pkg-config
ln -sf /usr/include/ImageMagick-7/MagickWand /usr/include/ImageMagick-7/wand
</code></pre><p>编辑配置文件 <code>/etc/minidlna.conf</code>，并修改如下配置：</p>
<pre><code>network_interface=wlan0
root_container=B
friendly_name=xxxx
media_dir=V,/mnt/external_disk/Videos
db_dir=/var/cache/minidlna
</code></pre><p>还需配置如下参数，否则可能导致 inotify 构建播放列表失败，重启后生效。</p>
<pre><code>echo &#39;fs.inotify.max_user_watches = 100000&#39; &gt;&gt; /etc/sysctl.d/90-inotify.conf
</code></pre><p>设置 minidlna 开机启动并启动服务：</p>
<pre><code>systemctl enable minidlna
systemctl start minidlna
</code></pre><h2 id="Samba"><a href="#Samba" class="headerlink" title="Samba"></a>Samba</h2><p>安装配置 samba 服务，便于上传文件。</p>
<pre><code>pacman -S samba
</code></pre><p>编辑配置文件：</p>
<pre><code>vi /etc/samba/smb.conf

[global]
        workgroup = WORKGROUP
        netbios name = XiaoZhuTVSmb
        server string = XiaoZhuTV Samba server
        security = user
[Movies]
        path = /mnt/external_disk/Videos
        valid users = god
        public = no
        writeable = yes
        browseable = yes
</code></pre><p>设置 samba 服务开机启动 &amp; 启动服务：</p>
<pre><code>systemctl start smbd.service
systemctl enable smbd.service
</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[FTP on Ubuntu 14.04]]></title>
      <url>/2017/12/07/FTP%20on%20Ubuntu%2014.04/</url>
      <content type="html"><![CDATA[<p>Install and config vsftp on ubuntu 14.04</p>
<h1 id="FTP-on-Ubuntu-14-04"><a href="#FTP-on-Ubuntu-14-04" class="headerlink" title="FTP on Ubuntu 14.04"></a>FTP on Ubuntu 14.04</h1><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><pre><code>apt-get install vsftpd
</code></pre><p>备份默认配置文件</p>
<pre><code>cp /etc/vsftpd.conf /etc/vsftpd.conf.orig
</code></pre><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><p>We’ll need to open ports 20 and 21 for FTP, port 990 for later when we enable TLS, and ports 40000-50000 for the range of passive ports.</p>
<pre><code>-A INPUT -i eth0 -p tcp -m tcp --dport 20 -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 21 -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 990 -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 40000:50000 -j ACCEPT
</code></pre><h2 id="User-Directory"><a href="#User-Directory" class="headerlink" title="User Directory"></a>User Directory</h2><p>添加用户，用户名自定义，设置密码后一路回车。</p>
<pre><code>useradd transfer
</code></pre><p>FTP is generally more secure when users are restricted to a specific directory.vsftpd accomplishes this with chroot jails. When chroot is enabled for local users, they are restricted to their home directory by default. However, because of the way vsftpd secures the directory, it must not be writable by the user. This is fine for a new user who should only connect via FTP, but an existing user may need to write to their home folder if they also shell access.</p>
<p>In this example, rather than removing write privileges from the home directory, we’re will create an ftp directory to serve as the chroot and a writable files directory to hold the actual files.</p>
<pre><code>mkdir -p /home/transfer/ftp
chown nobody:nogroup /home/transfer/ftp
chmod a-w /home/transfer/ftp
</code></pre><p>Next, we’ll create the directory where files can be uploaded and assign ownership to the user.</p>
<pre><code>mkdir -p /home/transfer/ftp/files
chown transfer:transfer /home/transfer/ftp/files/
</code></pre><h2 id="Configuring-FTP-Access"><a href="#Configuring-FTP-Access" class="headerlink" title="Configuring FTP Access"></a>Configuring FTP Access</h2><p>编辑文件 <code>/etc/vsftpd.conf</code>，修改/添加如下配置后保存并退出。</p>
<pre><code>write_enable=YES
chroot_local_user=YES

pasv_min_port=40000
pasv_max_port=50000

# We’ll add a user_sub_token in order to insert the username in our local_root directory path so our configuration will work for this user and any future users that might be added.
user_sub_token=$USER
local_root=/home/$USER/ftp

# Since we’re only planning to allow FTP access on a case-by-case basis, we’ll set up the configuration so that access is given to a user only when they are explicitly added to a list rather than by default.
userlist_enable=YES
userlist_file=/etc/vsftpd.userlist
userlist_deny=NO
</code></pre><p>添加 ftp 用户到 vsftpd.userlist。</p>
<pre><code>echo &quot;transfer&quot; | tee /etc/vsftpd.userlist
</code></pre><h2 id="Restart-vsftpd"><a href="#Restart-vsftpd" class="headerlink" title="Restart vsftpd"></a>Restart vsftpd</h2><pre><code>service vsftpd restart
</code></pre><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-vsftpd-for-a-user-s-directory-on-ubuntu-16-04" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-set-up-vsftpd-for-a-user-s-directory-on-ubuntu-16-04</a></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Arch on Raspberry Pi]]></title>
      <url>/2017/12/01/Arch%20Configuration/</url>
      <content type="html"><![CDATA[<p>Install arch to Raspberry Pi and the basic configuration of arch</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>按照 <a href="https://archlinuxarm.org/platforms/armv6/raspberry-pi" target="_blank" rel="noopener">Arch Wiki</a> 中的步骤操作即可。</p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="mkfs-vfat-command-not-found"><a href="#mkfs-vfat-command-not-found" class="headerlink" title="mkfs.vfat: command not found"></a>mkfs.vfat: command not found</h3><pre><code>yaourt -S dosfstools    # for mkfs.vfat and mkfs.msdos
yaourt -S ntfsprogs     # for mkfs.ntfs
</code></pre><h3 id="Partition-1-contains-a-vfat-signature"><a href="#Partition-1-contains-a-vfat-signature" class="headerlink" title="Partition #1 contains a vfat signature"></a>Partition #1 contains a vfat signature</h3><blockquote>
<p>Each disk and partition has some sort of signature and metadata/magic strings on it. The metadata used by operating system to configure disks or attach drivers and mount disks on your system. You can view such partition-table signatures/metadata/magic strings using the wipefs command. </p>
</blockquote>
<p>遇到上述提示选择 yes 即可。</p>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>配置树莓派的 <code>ethernet</code> 网卡为固定 IP，这样就可以在树莓派启动后直接通过 <code>ethernet</code> 网卡直连树莓派，对其进行配置。</p>
<p>重新挂载 root 目录：</p>
<pre><code>mount /dev/sdx2 root/
</code></pre><p>编辑/创建如下文件，并将其修改为如下内容：</p>
<pre><code>vi /etc/systemd/network/eth0.network
</code></pre><pre><code>[Match]
Name=eth0

[Network]
Address=192.168.1.100/24
</code></pre><p>弹出 root 目录并保证数据正确写入：</p>
<pre><code>umount root &amp;&amp; sync
</code></pre><p>这样将就可以通过 <code>192.168.1.100</code> 这个 IP 与树莓派直连，并通过 ssh 进行登录完成后续配置过程。</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><p>切换到 root 用户：</p>
<pre><code>su - root   # sudo 命令需要后续通过包管理工具安装
</code></pre><p>修改默认 alarm/root 用户密码：</p>
<pre><code>passwd alarm
passwd root
</code></pre><h2 id="WIFI"><a href="#WIFI" class="headerlink" title="WIFI"></a>WIFI</h2><p>无线网卡型号：TP-LINK TL-WN725N USB无线网卡</p>
<pre class=" language-shell"><code class="language-shell">wifi-menu
</code></pre>
<p>设置无线自动连接</p>
<pre><code>netctl enable wlan0-xxx
</code></pre><h2 id="配置-locale"><a href="#配置-locale" class="headerlink" title="配置 locale"></a>配置 locale</h2><pre><code>vi /etc/locale.gen
</code></pre><p>取消掉 en_US.UTF-8 和 zh_CN.UTF-8 的注释</p>
<pre><code>locale-gen

echo LANG=en_US.UTF-8 &gt; /etc/locale.conf
</code></pre><h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><p>添加 archlinuxcn 源，在 <code>/etc/pacman.conf</code> 文件末尾加入如下内容：</p>
<pre class=" language-shell"><code class="language-shell">[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = http://repo.archlinuxcn.org/$arch
</code></pre>
<p>测速并替换默认镜像源：</p>
<pre><code>pacman -S reflector # arch arm 源中无此包
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
reflector -l 5 --sort rate --save /etc/pacman.d/mirrorlist
</code></pre><p>或直接添加清华源和中科大源：</p>
<pre><code>Server = http://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/$arch/$repo
Server = http://mirrors.ustc.edu.cn/archlinuxarm/$arch/$repo
</code></pre><p>安装 keyring：</p>
<pre><code>pacman -S archlinuxcn-keyring
</code></pre><h2 id="yaourt"><a href="#yaourt" class="headerlink" title="yaourt"></a>yaourt</h2><p>树莓派中需要手工编译</p>
<pre><code>pacman -S yaourt
</code></pre><h2 id="build-essential"><a href="#build-essential" class="headerlink" title="build-essential"></a>build-essential</h2><pre><code>pacman -S base-devel cmake sudo htop bmon wget tmux
</code></pre><h1 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h1><pre><code>dd if=/dev/disk3 bs=16m | gzip &gt; raspberrypi.img.gz
</code></pre><h1 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h1><ul>
<li><a href="https://www.cyberciti.biz/faq/howto-use-wipefs-to-wipe-a-signature-from-disk-on-linux/" target="_blank" rel="noopener">https://www.cyberciti.biz/faq/howto-use-wipefs-to-wipe-a-signature-from-disk-on-linux/</a></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Python Best Practice]]></title>
      <url>/2017/12/01/Python%20Best%20Practice/</url>
      <content type="html"><![CDATA[<h1 id="Python-编码规范"><a href="#Python-编码规范" class="headerlink" title="Python 编码规范"></a>Python 编码规范</h1><ul>
<li><a href="https://wiki.woodpecker.org.cn/moin/PythonCodingRule" target="_blank" rel="noopener">Python Coding Rule</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">PEP8</a></li>
<li>遵从项目原有代码风格</li>
<li>代码整洁优先级最高</li>
<li>尽量使用 <code>key in dict</code> 或者 <code>dict.get(key)</code> 判断 dict 中是否存在 <code>key</code> 这个键或获取键 <code>key</code> 的 <code>value</code></li>
<li><code>itertools</code> 包可以应付绝大部分对 list 类型数据的操作场景，遇到特殊的 list 类型数据操作需求时优先考虑使用 <code>itertools</code> 包，而非自行实现</li>
<li>服务端一律使用 <code>time.time()</code> 获取 UTC 时间戳作为时间标识，在需要进行展示的地方使用对应方法转换为本时区的不同格式时间</li>
<li>通过截断逻辑避免缩进的出现。以下述代码为例：</li>
</ul>
<pre><code>def save_data_to_mongo(data):
    if data:
        check_data(data)
        format_data(data)
        extend_data(data)
        db.collection.insert(data)
</code></pre><p>更好的写法为：</p>
<pre><code>def save_data_to_mongo(data):
    if not data:
        return
    check_data(data)
    format_data(data)
    extend_data(data)
    db.collection.insert(data)
</code></pre><ul>
<li>函数拆分、接口设计原则优先考虑可读性，在出现性能问题时再考虑合并优化</li>
<li>定义数值型常量时可以直接写清楚计算过程，解释器会帮忙将常量优化为计算结果</li>
</ul>
<pre class=" language-python"><code class="language-python">SECOND_ONE_WEEK <span class="token operator">=</span> <span class="token number">604800</span>

SECOND_ONE_WEEK <span class="token operator">=</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span>    <span class="token comment" spellcheck="true"># better</span>
</code></pre>
<ul>
<li><code>try ... except Exception: ...</code> 本质上是异常处理，而非仅仅是异常捕获。稳定代码和非稳定代码要做出区分，应严格避免对大段代码的异常捕获，对异常的处理也应该尽可能细致，尽量避免不负责任的匿名 catch 的出现</li>
<li>Dict upsert</li>
</ul>
<p>常规实现：</p>
<pre><code>dict_uo2data = {}
if ip in dict_uo2data:
    dict_uo2data[ip].append(data)
else:
    dict_uo2data[ip] = [data]
</code></pre><p>更好的写法：</p>
<pre><code>dict_uo2data = {}
dict_uo2data.setdefault(ip, []).append(data)
</code></pre><ul>
<li>禁止使用 mutable 对象作为默认参数</li>
</ul>
<p>错误示例一：</p>
<pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">return</span> lst
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">>></span><span class="token operator">></span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">>></span><span class="token operator">></span> f<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
</code></pre>
<p>错误示例二：</p>
<pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> time
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">report</span><span class="token punctuation">(</span>when<span class="token operator">=</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">return</span> when
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">>></span><span class="token operator">></span> report<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">1500113234.487932</span>
<span class="token operator">>></span><span class="token operator">></span> report<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">1500113234.487932</span>
</code></pre>
<ul>
<li>正确理解 <code>=</code> 和 <code>+=</code> 的区别</li>
</ul>
<pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> id<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token number">4357132800</span>
<span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 指向一个新的对象</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> id<span class="token punctuation">(</span>x<span class="token punctuation">)</span> 
<span class="token number">4357132728</span>

<span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> id<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token number">4357132800</span>
<span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 修改原有对象</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> id<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token number">4357132800</span>
</code></pre>
<ul>
<li>禁止使用乘法运算生成可变对象序列</li>
</ul>
<pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> test <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> test
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> test<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> test
Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre>
<pre><code>In [9]: for i in test:
   ...:     print id(i)
4548762800
4548762800
4548762800
4548762800
4548762800
4548762800
4548762800
4548762800
4548762800
4548762800
</code></pre><ul>
<li>禁止在访问列表的同时对列表中元素进行增删操作</li>
</ul>
<pre><code>In [11]: l = [1, 2, 4, 5]

In [12]: for i, v in enumerate(l):
    ...:     if v % 2 == 0:
    ...:         del l[i]
    ...:

In [13]: l
Out[13]: [1, 4, 5]    # 预期为 [1, 5]
</code></pre><ul>
<li>禁止在 list comprehension 中使用 lambda 表达式</li>
</ul>
<pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> func <span class="token keyword">in</span>  <span class="token punctuation">[</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> i <span class="token operator">*</span> x <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">print</span> func<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token number">8</span>
<span class="token number">8</span>
<span class="token number">8</span>
<span class="token number">8</span>
<span class="token number">8</span>
</code></pre>
<p>问题产生根本原因在于 python 的属性查找规则。上述示例中 i 在闭包作用域，而 python 的闭包是 lazy binding，这意味着闭包中的值，是在内部函数被调用时查询到的。</p>
<p>在无法避免使用闭包时，可以通过传递默认参数将 i 置于本地作用域。</p>
<pre><code>In [19]: for func in  [lambda x, i=i: i * x for i in range(5)]:
    ...:     print func(2)
</code></pre><ul>
<li>禁止自行定义 <code>__del__</code> 函数，可能导致内存泄露。</li>
</ul>
<blockquote>
<p>Circular references which are garbage are detected when the option cycle detector is enabled (it’s on by default), but can only be cleaned up if there are no Python-level <strong>del</strong>() methods involved.</p>
</blockquote>
<ul>
<li>迭代器只能被遍历一次</li>
</ul>
<pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> test <span class="token operator">=</span> iter<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">for</span> j <span class="token keyword">in</span> test<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">print</span> i<span class="token punctuation">,</span> j
<span class="token number">0</span> <span class="token number">1</span>
<span class="token number">0</span> <span class="token number">2</span>
<span class="token number">0</span> <span class="token number">3</span>
<span class="token number">0</span> <span class="token number">4</span>
<span class="token number">0</span> <span class="token number">5</span>

In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> test<span class="token punctuation">.</span>next<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
StopIteration                             Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span>input<span class="token number">-31</span><span class="token operator">-</span><span class="token number">0743161fe2fe</span><span class="token operator">></span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token number">1</span> test<span class="token punctuation">.</span>next<span class="token punctuation">(</span><span class="token punctuation">)</span>

StopIteration<span class="token punctuation">:</span>
</code></pre>
<ul>
<li>尽量使用 <code>get</code> 方法获取 <code>dict</code> 中对应 key 的 value</li>
</ul>
<pre class=" language-python"><code class="language-python">test <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">'list'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">'dict'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">'key1'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">'key2'</span><span class="token punctuation">:</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">'int'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token string">'string'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span>
    <span class="token string">'bool'</span><span class="token punctuation">:</span> <span class="token boolean">True</span>
<span class="token punctuation">}</span>

test<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'dict'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'int'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'string'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'bool'</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre>
<ul>
<li>函数返回值应为同一类型</li>
</ul>
<p>错误示例：</p>
<pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> arg<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">return</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> func<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">print</span> i
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
TypeError                                 Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>ipython<span class="token operator">-</span>input<span class="token number">-54</span><span class="token operator">-</span>eb27d4da633f<span class="token operator">></span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token number">5</span>         <span class="token keyword">return</span>
      <span class="token number">6</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token number">7</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> func<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token number">8</span>     <span class="token keyword">print</span> i
      <span class="token number">9</span>

TypeError<span class="token punctuation">:</span> <span class="token string">'NoneType'</span> object <span class="token keyword">is</span> <span class="token operator">not</span> iterable
</code></pre>
<p>正确示例：</p>
<pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> arg<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> func<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">print</span> i
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>
</code></pre>
<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h2 id="Alfred"><a href="#Alfred" class="headerlink" title="Alfred"></a>Alfred</h2><ul>
<li>file saerch</li>
<li>web search</li>
<li>clipboard</li>
<li>snippets</li>
<li>workflow</li>
</ul>
<h2 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h2><h2 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h2><h2 id="ssh-config"><a href="#ssh-config" class="headerlink" title="ssh config"></a>ssh config</h2><blockquote>
<p>The known_hosts file lets the client authenticate the server, to check that it isn’t connecting to an impersonator. The authorized_keys file lets the server authenticate the user.</p>
</blockquote>
<h2 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h2><ul>
<li><a href="https://github.com/dragonkid/tmux-config" target="_blank" rel="noopener">https://github.com/dragonkid/tmux-config</a></li>
<li>zoom pane <code>ctrl + z</code></li>
</ul>
<h2 id="keychain"><a href="#keychain" class="headerlink" title="keychain"></a>keychain</h2><pre class=" language-shell"><code class="language-shell">eval $(keychain -Q -q --agents ssh --eval ~/.ssh/id_rsa)
</code></pre>
<h2 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h2><h2 id="mitmproxy"><a href="#mitmproxy" class="headerlink" title="mitmproxy"></a>mitmproxy</h2><pre class=" language-shell"><code class="language-shell">mitmproxy -p 9200 -R http://localhost:9201 -b 0.0.0.0 --no-mouse
</code></pre>
<h2 id="virtualenvwrapper"><a href="#virtualenvwrapper" class="headerlink" title="virtualenvwrapper"></a>virtualenvwrapper</h2><h2 id="vagrant"><a href="#vagrant" class="headerlink" title="vagrant"></a>vagrant</h2><ul>
<li>vagrant scp</li>
<li>vagrant oh-my-zsh plugin</li>
</ul>
<h2 id="shell-zsh"><a href="#shell-zsh" class="headerlink" title="shell/zsh"></a>shell/zsh</h2><ul>
<li><code>alt + f/b</code>: 前进/后退一个单词</li>
<li><code>ctrl + f/b</code>: 前进/后退一个字母</li>
<li><code>ctrl + u/y</code>: 清空/恢复当前输入</li>
<li><code>ctrl + e</code>: 移动到当前输入末尾</li>
<li><code>ctrl + a</code>: 移动到当前输入开头</li>
<li><code>ctrl + &#39;/&quot;</code>: 为当前文本增加单/双引号 </li>
<li><code>ctrl + p/n</code>: 查看上一条/下一条命令</li>
<li><code>ctrl + r</code>/<code>ctrl + shift + r</code>: 查找曾经输入过的命令，按多次查找下一个或上一个</li>
<li><code>ctrl+xx</code>: Move between the beginning of the line and the current position of the cursor. This allows you to press <code>ctrl+xx</code> to return to the start of the line, change something, and then press <code>ctrl+xx</code> to go back to your original cursor position. To use this shortcut, hold the <code>ctrl</code> key and tap the <code>x</code> key twice.</li>
<li><code>ctrl+d or Delete</code>: Delete the character under the cursor.</li>
<li><code>alt+d</code>: Delete all characters after the cursor on the current line.</li>
<li><code>alt + h</code>: 命令输入到一半的时候需要查看 man 手册</li>
<li><code>sudo</code> 插件: 按两次 <code>esc</code> 在命令的开头补齐 sudo</li>
<li><code>colored-man-pages</code> 插件: man 手册高亮</li>
</ul>
<h2 id="Balsamiq"><a href="#Balsamiq" class="headerlink" title="Balsamiq"></a>Balsamiq</h2><p>研发快速制作原型图</p>
<h2 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h2><ul>
<li>ideavim（~/.ideavimrc 配置方式与 vim 相同）</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Jypyter Notebook Best Practice]]></title>
      <url>/2017/10/12/Jypyter%20Notebook%20Best%20Practice/</url>
      <content type="html"><![CDATA[<h1 id="Jypyter-Notebook-Best-Practice"><a href="#Jypyter-Notebook-Best-Practice" class="headerlink" title="Jypyter Notebook Best Practice"></a>Jypyter Notebook Best Practice</h1><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p>同时提交 py 和 html 文件，方便进行 codereview。</p>
<p>通过 jupyter-notebook 的 FileContentsManager.post_save_hook 实现，添加如下代码到 jupyter-notebook 配置文件：</p>
<pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">from</span> subprocess <span class="token keyword">import</span> check_call

<span class="token keyword">def</span> <span class="token function">post_save</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> os_path<span class="token punctuation">,</span> contents_manager<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""post-save hook for converting notebooks to .py scripts"""</span>
    <span class="token keyword">if</span> model<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'notebook'</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token comment" spellcheck="true"># only do this for notebooks</span>
    d<span class="token punctuation">,</span> fname <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>os_path<span class="token punctuation">)</span>
    check_call<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'jupyter'</span><span class="token punctuation">,</span> <span class="token string">'nbconvert'</span><span class="token punctuation">,</span> <span class="token string">'--to'</span><span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">,</span> fname<span class="token punctuation">]</span><span class="token punctuation">,</span> cwd<span class="token operator">=</span>d<span class="token punctuation">)</span>
    check_call<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'jupyter'</span><span class="token punctuation">,</span> <span class="token string">'nbconvert'</span><span class="token punctuation">,</span> <span class="token string">'--to'</span><span class="token punctuation">,</span> <span class="token string">'html'</span><span class="token punctuation">,</span> fname<span class="token punctuation">]</span><span class="token punctuation">,</span> cwd<span class="token operator">=</span>d<span class="token punctuation">)</span>

c<span class="token punctuation">.</span>FileContentsManager<span class="token punctuation">.</span>post_save_hook <span class="token operator">=</span> post_save
</code></pre>
<h2 id="目录结构-文件命名"><a href="#目录结构-文件命名" class="headerlink" title="目录结构/文件命名"></a>目录结构/文件命名</h2><pre class=" language-shell"><code class="language-shell">- develop # (Lab-notebook style)
 + [ISO 8601 date]-[DS-initials]-[2-4 word description].ipynb
 + 2015-06-28-jw-initial-data-clean.html
 + 2015-06-28-jw-initial-data-clean.ipynb
 + 2015-06-28-jw-initial-data-clean.py
 + 2015-07-02-jw-coal-productivity-factors.html
 + 2015-07-02-jw-coal-productivity-factors.ipynb
 + 2015-07-02-jw-coal-productivity-factors.py
- deliver # (final analysis, code, presentations, etc)
 + Coal-mine-productivity.ipynb
 + Coal-mine-productivity.html
 + Coal-mine-productivity.py
- figures
 + 2015-07-16-jw-production-vs-hours-worked.png
- src # (modules and scripts)
 + init.py
 + load_coal_data.py
 + figures # (figures and plots)
 + production-vs-number-employees.png
 + production-vs-hours-worked.png
- data (backup-separate from version control)
 + coal_prod_cleaned.csv
</code></pre>
<p>There are many benefits to this workflow and structure. The first and primary one is that they create a historical record of how the analysis progressed. It’s also easily searchable:</p>
<ul>
<li>by date (ls 2015-06*.ipynb)</li>
<li>by author (ls 2015<em>-jw-</em>.ipynb)</li>
<li>by topic (ls <em>-coal-</em>.ipynb)</li>
</ul>
<h2 id="数据加载"><a href="#数据加载" class="headerlink" title="数据加载"></a>数据加载</h2><p>避免在不同位置多次导入同一份数据。通过 head 函数导入部分数据：</p>
<pre class=" language-python"><code class="language-python">dframe <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./data/titanic-data.csv'</span><span class="token punctuation">)</span>
dframe<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre>
<h3 id="Qgrid"><a href="#Qgrid" class="headerlink" title="Qgrid"></a>Qgrid</h3><p><a href="https://github.com/quantopian/qgrid" target="_blank" rel="noopener">grid</a> - SlickGrid in Jupyter Notebooks</p>
<p><img src="/images/15077993187069/15079714067211.jpg" alt=""></p>
<p><strong>注：qgrid 包对于 ipywidgets 和 jupyter notebook 的版本存在严格的依赖关系，盲目使用最新版本可能导致 qgrid 不可用</strong></p>
<h2 id="ast-node-interactivity"><a href="#ast-node-interactivity" class="headerlink" title="ast_node_interactivity"></a>ast_node_interactivity</h2><p>当在同一个 code cell 中同时使用 dataframe 的 head、tail 等多个方法时，Jupyter Notebook 的默认行为是只显示其中的最后一个。如果需要将他们同时显示出来，则需要修改如下配置：</p>
<pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># see value of statements at once</span>
<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>core<span class="token punctuation">.</span>interactiveshell <span class="token keyword">import</span> InteractiveShell
InteractiveShell<span class="token punctuation">.</span>ast_node_interactivity <span class="token operator">=</span> <span class="token string">"all"</span>
</code></pre>
<p>效果如下：</p>
<p><img src="/images/15077993187069/15080350603391.jpg" alt=""></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Jupyter-contrib-extensions"><a href="#Jupyter-contrib-extensions" class="headerlink" title="Jupyter-contrib extensions"></a>Jupyter-contrib extensions</h3><p>Jupyter-contrib extensions is a family of extensions which give Jupyter a lot more functionality, including e.g. jupyter spell-checker and code-formatter.</p>
<pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master
pip <span class="token function">install</span> jupyter_nbextensions_configurator
jupyter contrib nbextension <span class="token function">install</span> --user
jupyter nbextensions_configurator <span class="token function">enable</span> --user
</code></pre>
<p><img src="/images/15077993187069/15081178978067.jpg" alt=""></p>
<h3 id="Create-a-presentation"><a href="#Create-a-presentation" class="headerlink" title="Create a presentation"></a>Create a presentation</h3><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> RISE
jupyter-nbextension <span class="token function">install</span> rise --py --sys-prefix
jupyter-nbextension <span class="token function">enable</span> rise --py --sys-prefix
</code></pre>
<p><img src="/images/15077993187069/15081186000636.jpg" alt=""></p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li>通过 <code>_</code> + 数字访问之前的 cell 的输出，例如：</li>
</ul>
<p><img src="/images/15077993187069/15078594496187.jpg" alt=""></p>
<ul>
<li>通过 <code>_!</code> + 数字访问之前 cell 的输入，例如：</li>
</ul>
<p><img src="/images/15077993187069/15078595418789.jpg" alt=""></p>
<ul>
<li>put imports at the top of the Notebook</li>
<li>通过 <code>?</code> + 函数名获取 docstring 中的文档信息</li>
</ul>
<p><img src="/images/15077993187069/15080352795694.jpg" alt=""></p>
<ul>
<li><a href="http://ipython.readthedocs.io/en/stable/interactive/magics.html" target="_blank" rel="noopener">magic commands</a> <code>%</code>: line command, <code>%%</code>: cell command</li>
<li>通过 <code>%env</code> 控制环境变量而无需重启 jupyter server</li>
<li>通过 <code>%load</code> 从外部向当前 code cell 中加载代码，可以为路径或 url</li>
<li>通过 <code>%store</code> 在两个 notebook 之间传递数据</li>
<li>通过 <code>%who type</code> 获取当前 notebook 中的全局变量，type 可以为 str 等数据类型</li>
<li>使用 <code>%timeit</code> 或 <code>%%time</code> 测试代码的运行耗时</li>
<li>Suppress the output of final function with a semicolon at the end</li>
<li>通过 <code>!ls</code> 方式执行 shell 命令或使用 <code>%%bash</code> 将解释器变更为 bash。甚至可以以如下方式使用：</li>
</ul>
<p><img src="/images/15077993187069/15081187831139.jpg" alt=""></p>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul>
<li><a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/" target="_blank" rel="noopener">https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/</a></li>
<li><a href="https://svds.com/jupyter-notebook-best-practices-for-data-science/" target="_blank" rel="noopener">https://svds.com/jupyter-notebook-best-practices-for-data-science/</a></li>
<li><a href="http://blog.juliusschulz.de/blog/ultimate-ipython-notebook" target="_blank" rel="noopener">http://blog.juliusschulz.de/blog/ultimate-ipython-notebook</a></li>
<li><a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/" target="_blank" rel="noopener">https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/</a></li>
</ul>
]]></content>
      
        
    </entry>
    
  
  
    
  
</search>
