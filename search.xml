<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/11/29/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Jypyter Notebook Best Practice]]></title>
      <url>/2017/10/12/Jypyter%20Notebook%20Best%20Practice/</url>
      <content type="html"><![CDATA[<h1 id="Jypyter-Notebook-Best-Practice"><a href="#Jypyter-Notebook-Best-Practice" class="headerlink" title="Jypyter Notebook Best Practice"></a>Jypyter Notebook Best Practice</h1><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p>同时提交 py 和 html 文件，方便进行 codereview。</p>
<p>通过 jupyter-notebook 的 FileContentsManager.post_save_hook 实现，添加如下代码到 jupyter-notebook 配置文件：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> check_call</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_save</span><span class="params">(model, os_path, contents_manager)</span>:</span></span><br><span class="line">    <span class="string">"""post-save hook for converting notebooks to .py scripts"""</span></span><br><span class="line">    <span class="keyword">if</span> model[<span class="string">'type'</span>] != <span class="string">'notebook'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="comment"># only do this for notebooks</span></span><br><span class="line">    d, fname = os.path.split(os_path)</span><br><span class="line">    check_call([<span class="string">'jupyter'</span>, <span class="string">'nbconvert'</span>, <span class="string">'--to'</span>, <span class="string">'script'</span>, fname], cwd=d)</span><br><span class="line">    check_call([<span class="string">'jupyter'</span>, <span class="string">'nbconvert'</span>, <span class="string">'--to'</span>, <span class="string">'html'</span>, fname], cwd=d)</span><br><span class="line"></span><br><span class="line">c.FileContentsManager.post_save_hook = post_save</span><br></pre></td></tr></table></figure>
<h2 id="目录结构-文件命名"><a href="#目录结构-文件命名" class="headerlink" title="目录结构/文件命名"></a>目录结构/文件命名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">- develop # (Lab-notebook style)</span><br><span class="line"> + [ISO 8601 date]-[DS-initials]-[2-4 word description].ipynb</span><br><span class="line"> + 2015-06-28-jw-initial-data-clean.html</span><br><span class="line"> + 2015-06-28-jw-initial-data-clean.ipynb</span><br><span class="line"> + 2015-06-28-jw-initial-data-clean.py</span><br><span class="line"> + 2015-07-02-jw-coal-productivity-factors.html</span><br><span class="line"> + 2015-07-02-jw-coal-productivity-factors.ipynb</span><br><span class="line"> + 2015-07-02-jw-coal-productivity-factors.py</span><br><span class="line">- deliver # (final analysis, code, presentations, etc)</span><br><span class="line"> + Coal-mine-productivity.ipynb</span><br><span class="line"> + Coal-mine-productivity.html</span><br><span class="line"> + Coal-mine-productivity.py</span><br><span class="line">- figures</span><br><span class="line"> + 2015-07-16-jw-production-vs-hours-worked.png</span><br><span class="line">- src # (modules and scripts)</span><br><span class="line"> + init.py</span><br><span class="line"> + load_coal_data.py</span><br><span class="line"> + figures # (figures and plots)</span><br><span class="line"> + production-vs-number-employees.png</span><br><span class="line"> + production-vs-hours-worked.png</span><br><span class="line">- data (backup-separate from version control)</span><br><span class="line"> + coal_prod_cleaned.csv</span><br></pre></td></tr></table></figure>
<p>There are many benefits to this workflow and structure. The first and primary one is that they create a historical record of how the analysis progressed. It’s also easily searchable:</p>
<ul>
<li>by date (ls 2015-06*.ipynb)</li>
<li>by author (ls 2015<em>-jw-</em>.ipynb)</li>
<li>by topic (ls <em>-coal-</em>.ipynb)</li>
</ul>
<h2 id="数据加载"><a href="#数据加载" class="headerlink" title="数据加载"></a>数据加载</h2><p>避免在不同位置多次导入同一份数据。通过 head 函数导入部分数据：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dframe = pd.read_csv(<span class="string">'./data/titanic-data.csv'</span>)</span><br><span class="line">dframe.head()</span><br></pre></td></tr></table></figure>
<h3 id="Qgrid"><a href="#Qgrid" class="headerlink" title="Qgrid"></a>Qgrid</h3><p>/images/<br><a href="https://github.com/quantopian/qgrid" target="_blank" rel="noopener">grid</a> - SlickGrid in Jupyter Notebooks</p>
<p><img src="/images/15077993187069/15079714067211.jpg" alt=""></p>
<p><strong>注：qgrid 包对于 ipywidgets 和 jupyter notebook 的版本存在严格的依赖关系，盲目使用最新版本可能导致 qgrid 不可用</strong></p>
<h2 id="ast-node-interactivity"><a href="#ast-node-interactivity" class="headerlink" title="ast_node_interactivity"></a>ast_node_interactivity</h2><p>当在同一个 code cell 中同时使用 dataframe 的 head、tail 等多个方法时，Jupyter Notebook 的默认行为是只显示其中的最后一个。如果需要将他们同时显示出来，则需要修改如下配置：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># see value of statements at once</span></span><br><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/images/15077993187069/15080350603391.jpg" alt=""></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Jupyter-contrib-extensions"><a href="#Jupyter-contrib-extensions" class="headerlink" title="Jupyter-contrib extensions"></a>Jupyter-contrib extensions</h3><p>Jupyter-contrib extensions is a family of extensions which give Jupyter a lot more functionality, including e.g. jupyter spell-checker and code-formatter.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master</span><br><span class="line">pip install jupyter_nbextensions_configurator</span><br><span class="line">jupyter contrib nbextension install --user</span><br><span class="line">jupyter nbextensions_configurator <span class="built_in">enable</span> --user</span><br></pre></td></tr></table></figure>
<p><img src="/images/15077993187069/15081178978067.jpg" alt=""></p>
<h3 id="Create-a-presentation"><a href="#Create-a-presentation" class="headerlink" title="Create a presentation"></a>Create a presentation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install RISE</span><br><span class="line">jupyter-nbextension install rise --py --sys-prefix</span><br><span class="line">jupyter-nbextension <span class="built_in">enable</span> rise --py --sys-prefix</span><br></pre></td></tr></table></figure>
<p><img src="/images/15077993187069/15081186000636.jpg" alt=""></p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li>通过 <code>_</code> + 数字访问之前的 cell 的输出，例如：</li>
</ul>
<p><img src="/images/15077993187069/15078594496187.jpg" alt=""></p>
<ul>
<li>通过 <code>_!</code> + 数字访问之前 cell 的输入，例如：</li>
</ul>
<p><img src="/images/15077993187069/15078595418789.jpg" alt=""></p>
<ul>
<li>put imports at the top of the Notebook</li>
<li>通过 <code>?</code> + 函数名获取 docstring 中的文档信息</li>
</ul>
<p><img src="/images/15077993187069/15080352795694.jpg" alt=""></p>
<ul>
<li><a href="http://ipython.readthedocs.io/en/stable/interactive/magics.html" target="_blank" rel="noopener">magic commands</a> <code>%</code>: line command, <code>%%</code>: cell command</li>
<li>通过 <code>%env</code> 控制环境变量而无需重启 jupyter server</li>
<li>通过 <code>%load</code> 从外部向当前 code cell 中加载代码，可以为路径或 url</li>
<li>通过 <code>%store</code> 在两个 notebook 之间传递数据</li>
<li>通过 <code>%who type</code> 获取当前 notebook 中的全局变量，type 可以为 str 等数据类型</li>
<li>使用 <code>%timeit</code> 或 <code>%%time</code> 测试代码的运行耗时</li>
<li>Suppress the output of final function with a semicolon at the end</li>
<li>通过 <code>!ls</code> 方式执行 shell 命令或使用 <code>%%bash</code> 将解释器变更为 bash。甚至可以以如下方式使用：</li>
</ul>
<p><img src="/images/15077993187069/15081187831139.jpg" alt=""></p>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul>
<li><a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/" target="_blank" rel="noopener">https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/</a></li>
<li><a href="https://svds.com/jupyter-notebook-best-practices-for-data-science/" target="_blank" rel="noopener">https://svds.com/jupyter-notebook-best-practices-for-data-science/</a></li>
<li><a href="http://blog.juliusschulz.de/blog/ultimate-ipython-notebook" target="_blank" rel="noopener">http://blog.juliusschulz.de/blog/ultimate-ipython-notebook</a></li>
<li><a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/" target="_blank" rel="noopener">https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/</a></li>
</ul>
]]></content>
      
        
    </entry>
    
  
  
    
  
</search>
